---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Icon from '../../components/Icon.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
const { title, description, pubDate, updatedDate, author, tags, category, image } = post.data;

// Format dates
const formattedPubDate = new Date(pubDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

const formattedUpdatedDate = updatedDate ? new Date(updatedDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}) : null;

// Calculate reading time
const content = post.body;
const wordsPerMinute = 200;
const wordCount = content.split(/\s+/).length;
const readingTime = Math.ceil(wordCount / wordsPerMinute);

// Get related posts (same category, excluding current post)
const allPosts = await getCollection('blog');
const relatedPosts = allPosts
  .filter(p => p.data.category === category && p.slug !== post.slug && !p.data.draft)
  .slice(0, 3);
---

<Layout title={`${title} - Blog`}>
  <article class="max-w-4xl mx-auto">
    <!-- Back to blog link -->
    <div class="mb-6">
      <a 
        href="/blog" 
        class="inline-flex items-center gap-2 text-[#f06] hover:underline"
      >
        <Icon name="arrow-left" size={16} />
        Back to Blog
      </a>
    </div>

    <!-- Article header -->
    <header class="mb-8">
      {image && (
        <div class="mb-6">
          <img 
            src={image || "/placeholder.svg"} 
            alt={title}
            class="w-full h-64 md:h-80 object-cover rounded-lg"
          />
        </div>
      )}
      
      <div class="mb-4">
        <span class="inline-block px-3 py-1 text-sm rounded bg-[#f06] text-white">
          {category}
        </span>
      </div>
      
      <h1 class="text-3xl md:text-4xl font-bold mb-4">{title}</h1>
      
      <p class="text-lg text-[var(--text-secondary)] mb-6">
        {description}
      </p>
      
      <div class="flex flex-wrap items-center gap-4 text-sm text-[var(--text-secondary)] mb-6">
        <div class="flex items-center gap-2">
          <Icon name="user" size={16} />
          <span>By {author}</span>
        </div>
        <div class="flex items-center gap-2">
          <Icon name="calendar" size={16} />
          <span>{formattedPubDate}</span>
        </div>
        {formattedUpdatedDate && (
          <div class="flex items-center gap-2">
            <Icon name="edit" size={16} />
            <span>Updated {formattedUpdatedDate}</span>
          </div>
        )}
        <div class="flex items-center gap-2">
          <Icon name="clock" size={16} />
          <span>{readingTime} min read</span>
        </div>
      </div>
      
      <div class="flex flex-wrap gap-2">
        {tags.map(tag => (
          <span class="px-2 py-1 text-sm rounded bg-[var(--bg-secondary)] text-[var(--text-secondary)]">
            #{tag}
          </span>
        ))}
      </div>
    </header>

    <!-- Article content -->
    <div class="prose prose-invert prose-lg max-w-none mb-12 blog-content">
      <Content />
    </div>

    <!-- Share buttons 
    <div class="border-t border-[var(--border-color)] pt-8 mb-12">
      <h3 class="text-lg font-semibold mb-4">Share this post</h3>
      <div class="flex gap-4">
        <a 
          href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(Astro.url.toString())}`}
          target="_blank"
          rel="noopener noreferrer"
          class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors"
        >
          Share on Twitter
        </a>
        <a 
          href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.toString())}`}
          target="_blank"
          rel="noopener noreferrer"
          class="px-4 py-2 bg-blue-700 text-white rounded hover:bg-blue-800 transition-colors"
        >
          Share on LinkedIn
        </a>
        <button 
          onclick="navigator.clipboard.writeText(window.location.href)"
          class="px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors"
        >
          Copy Link
        </button>
      </div>
    </div>
    -->

    <!-- Related posts -->
    {relatedPosts.length > 0 && (
      <div class="border-t border-[var(--border-color)] pt-8">
        <h3 class="text-lg font-semibold mb-6">Related Posts</h3>
        <div class="grid md:grid-cols-3 gap-6">
          {relatedPosts.map(relatedPost => (
            <div class="bg-[var(--bg-secondary)] rounded-lg p-4 border border-[var(--border-color)]">
              <h4 class="font-semibold mb-2">
                <a href={`/blog/${relatedPost.slug}`} class="hover:text-[#f06] transition-colors">
                  {relatedPost.data.title}
                </a>
              </h4>
              <p class="text-sm text-[var(--text-secondary)] mb-3 line-clamp-2">
                {relatedPost.data.description}
              </p>
              <div class="text-xs text-[var(--text-secondary)]">
                {new Date(relatedPost.data.pubDate).toLocaleDateString()}
              </div>
            </div>
          ))}
        </div>
      </div>
    )}
  </article>
</Layout>

<style is:global>
  /* Base prose styles */
  .blog-content {
    color: var(--text-primary);
    line-height: 1.8;
  }
  
  /* Headings */
  .blog-content h1,
  .blog-content h2,
  .blog-content h3,
  .blog-content h4,
  .blog-content h5,
  .blog-content h6 {
    color: var(--text-primary);
    font-weight: 700;
    margin-top: 2em;
    margin-bottom: 0.8em;
    line-height: 1.3;
  }
  
  .blog-content h1 {
    font-size: 2.25rem;
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 0.3em;
  }
  
  .blog-content h2 {
    font-size: 1.875rem;
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 0.3em;
  }
  
  .blog-content h3 {
    font-size: 1.5rem;
  }
  
  .blog-content h4 {
    font-size: 1.25rem;
  }
  
  .blog-content h5 {
    font-size: 1.125rem;
  }
  
  .blog-content h6 {
    font-size: 1rem;
  }
  
  /* Paragraphs and spacing */
  .blog-content p {
    margin-bottom: 1.5em;
  }
  
  /* Lists */
  .blog-content ul,
  .blog-content ol {
    margin-top: 0.5em;
    margin-bottom: 1.5em;
    padding-left: 1.5em;
  }
  
  .blog-content ul {
    list-style-type: disc;
  }
  
  .blog-content ol {
    list-style-type: decimal;
  }
  
  .blog-content li {
    margin-bottom: 0.5em;
  }
  
  .blog-content li > ul,
  .blog-content li > ol {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  
  /* Links */
  .blog-content a {
    color: #f06;
    text-decoration: none;
    transition: color 0.2s;
  }
  
  .blog-content a:hover {
    color: #e05;
    text-decoration: underline;
  }
  
  /* Blockquotes */
  .blog-content blockquote {
    border-left: 4px solid #f06;
    background-color: var(--bg-secondary);
    padding: 1rem 1.5rem;
    margin: 1.5rem 0;
    font-style: italic;
  }
  
  .blog-content blockquote p {
    margin-bottom: 0;
  }
  
  /* Code blocks */
  .blog-content pre {
    background-color: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 0.375rem;
    padding: 1rem;
    overflow-x: auto;
    margin: 1.5rem 0;
    font-family: 'Fira Code', monospace;
  }
  
  .blog-content code {
    background-color: var(--bg-secondary);
    padding: 0.2em 0.4em;
    border-radius: 0.25rem;
    font-size: 0.875em;
    font-family: 'Fira Code', monospace;
  }
  
  .blog-content pre code {
    background-color: transparent;
    padding: 0;
    border-radius: 0;
    font-size: 0.9em;
  }
  
  /* Tables */
  .blog-content table {
    width: 100%;
    border-collapse: collapse;
    margin: 1.5rem 0;
    overflow-x: auto;
    display: block;
  }
  
  .blog-content table thead {
    background-color: var(--bg-secondary);
  }
  
  .blog-content table th,
  .blog-content table td {
    padding: 0.75rem;
    border: 1px solid var(--border-color);
    text-align: left;
  }
  
  /* Horizontal rule */
  .blog-content hr {
    border: 0;
    border-top: 1px solid var(--border-color);
    margin: 2rem 0;
  }
  
  /* Images */
  .blog-content img {
    max-width: 100%;
    height: auto;
    border-radius: 0.375rem;
    margin: 1.5rem 0;
  }
  
  /* Emoji and inline elements */
  .blog-content .emoji {
    display: inline-block;
    vertical-align: middle;
    margin: 0 0.1em;
  }
  
  /* Task lists */
  .blog-content ul.contains-task-list {
    list-style-type: none;
    padding-left: 0;
  }
  
  .blog-content ul.contains-task-list li {
    display: flex;
    align-items: flex-start;
    margin-bottom: 0.5em;
  }
  
  .blog-content ul.contains-task-list input[type="checkbox"] {
    margin-right: 0.5em;
    margin-top: 0.25em;
  }
  
  /* Footnotes */
  .blog-content .footnotes {
    margin-top: 2rem;
    font-size: 0.875rem;
    color: var(--text-secondary);
    border-top: 1px solid var(--border-color);
    padding-top: 1rem;
  }
  
  /* Line breaks */
  .blog-content br {
    display: block;
    content: "";
    margin-top: 0.5em;
  }
  
  /* Responsive adjustments */
  @media (max-width: 640px) {
    .blog-content h1 {
      font-size: 1.875rem;
    }
    
    .blog-content h2 {
      font-size: 1.5rem;
    }
    
    .blog-content h3 {
      font-size: 1.25rem;
    }
    
    .blog-content pre {
      padding: 0.75rem;
    }
  }
  
  /* Fix for line-clamp */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
